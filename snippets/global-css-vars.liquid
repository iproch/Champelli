<style id="global-css-vars">
{%- liquid
# Body 
    assign bodyFontFamily = settings.bodyFontFamily

    assign bodyFontBold = bodyFontFamily | font_modify: 'weight', 'bold'
    assign bodyFontItalic = bodyFontFamily | font_modify: 'style', 'italic'
    assign bodyFontBoldItalic = bodyFontBold | font_modify: 'style', 'italic'

# Headings
    assign headingsFontFamily = settings.headingsFontFamily

    assign headingsFontFamilyBold = headingsFontFamily | font_modify: 'weight', 'bold'
    assign headingsFontFamilyItalic = headingsFontFamily | font_modify: 'style', 'italic'
    assign headingsFontFamilyBoldItalic = headingsFontFamilyBold | font_modify: 'style', 'italic' 

# Fonts
    echo bodyFontFamily | font_face: font_display: 'swap'
    echo bodyFontBold | font_face: font_display: 'swap'
    echo bodyFontItalic | font_face: font_display: 'swap'
    echo bodyFontBoldItalic | font_face: font_display: 'swap'

    echo headingsFontFamily | font_face: font_display: 'swap'
    echo headingsFontFamilyBold | font_face: font_display: 'swap'
    echo headingsFontFamilyItalic | font_face: font_display: 'swap'
    echo headingsFontFamilyBoldItalic | font_face: font_display: 'swap'
-%}

:root {
    --hFontFamily: var(--fontFamily);
    --fontWeight: 400;
    --fontStyle: normal;
    --hWeight: 600;
    --hStyle: normal;

    --bgColor: {{ settings.bgColor }};
    --bgColorOpacity: {{ settings.bgColor| color_modify: 'alpha', 0.85 }};
    --primary: {{ settings.color }};
    --plyr-color-main: var(--primary);
    --plyr-video-background: transparent;

    --color: {{ settings.color }};
    --linkColor: {{ settings.linkColor }};
    --linkHover: {{ settings.linkHover }};

    --buttonBgColor: {{ settings.buttonBgColor }};
    --buttonColor: {{ settings.buttonColor }};
    --buttonBorderColor: {{ settings.globalBorderColor }};
    --buttonBorderHover: {{ settings.globalBorderColor }};
    --buttonTransform: {{ settings.buttonTransform }};
    --buttonWeight: {{ settings.buttonWeight }};

    --buyButtonBgColor: {{ settings.buyButtonBgColor }};
    --buyButtonBorderColor: {{ settings.globalBorderColor }};
    --buyButtonBorderHover: {{ settings.globalBorderColor }};
    --buyButtonColor: {{ settings.buyButtonColor }};
    --buttonBorderWidth: {{ settings.globalBorderWidth }}px;

    --boxBgColor: {{ settings.boxBgColor }};
    --boxPlaceholderColor: {{ settings.boxColor }};
    --boxBorderColor: {{ settings.globalBorderColor }};
    --boxBorderHover: {{ settings.globalBorderColor }};
    --boxBorderActive: {{ settings.globalBorderColor }};
    --boxColor: {{ settings.boxColor }};
    --boxBorderWidth: {{ settings.globalBorderWidth }}px;;

    --cardBg: {{ settings.cardBg }};
    --cardColor: {{ settings.cardColor }};
    --cardTextBg: {{ settings.cardTextBg }};
/*
    --globalBorderColor: {{ settings.globalBorderColor }};
    --globalBorderWidth: {{ settings.globalBorderWidth }}px;
    --globalBorder: var(--globalBorderWidth) solid var(--globalBorderColor);
  */

    --radius: {{ settings.BorderRadiusGlobal }};
    --radius-2: {% if settings.BorderRadiusGlobal == '5rem' %}1rem{%- else -%}{{ settings.BorderRadiusGlobal }}{%- endif -%};
    --radiusImg: {{ settings.globalImgRadius }};

    --globalShadow: 0 0 15px rgba(0,0,0,0.25);
    --globalTransparentBg: {{ settings.bgColor | color_modify: 'alpha', 0.9 }};

    --buttonRadius: var(--radius);
    --padding: 2rem;
    --boxPadding: 1.4rem;
    --boxRadius: var(--radius);
    --buttonPadding: 1.4rem;
    --rowGap: 0;
    --columnGap: 0;

    --logoSize: 1.8rem;
    --headerHeight: auto;

    --fontSizeBase: {{ settings.fontSize | divided_by: 100.0 }};
    --fontSize: calc(var(--fontSizeBase) * 1.4rem);
    --iconSize: var(--fontSize);

    --colorHeadings: {{ settings.colorHeadings }};
    --hSizeBase: {{ settings.hSize | times: 1.0 | divided_by: settings.fontSize }};
    --hSize: calc(var(--hSizeBase) * 1.6rem);
    --h1Size: var(--hSize);
    --h2Size: var(--hSize);
    --h3Size: var(--hSize);
    --h4Size: var(--hSize);
    --h5Size: var(--hSize);
    --h6Size: var(--hSize);

    --hLine: 1.4;
    --h1Line: var(--hLine);
    --h2Line: var(--hLine);
    --h3Line: var(--hLine);
    --h4Line: var(--hLine);
    --h5Line: var(--hLine);
    --h6Line: var(--hLine);

    --fontFamily: {{ bodyFontFamily.family }}, {{ bodyFontFamily.fallback_families }};
    --fontWeight: {{ bodyFontFamily.weight }};
    --fontStyle: {{ bodyFontFamily.style }};

    --hFontFamily: {{ headingsFontFamily.family }}, {{ headingsFontFamily.fallback_families }};
    --hWeight: {{ headingsFontFamily.weight }};
    --hStyle: {{ headingsFontFamily.style }};
    --hTxTransform: {{ settings.hTxTransform }};

    --boxedLayoutMaxWidth: {{ settings.boxedLayoutWidth }}px;

    --cardRatioCustom: {{ settings.cardRatioCustom }}%;
}

{%- if settings.fadeOutCont -%}body:is(.open-cart,.open-search) :where(main,#shopify-section-footer) { opacity: 0.04; pointer-events: none; }{%- endif -%}

img,video,iframe:not([title="reCAPTCHA"]),.lazyframe,.plyr__video-wrapper { border-radius: var(--radiusImg) }

body.ip--padding :where(img,.lazyframe,.plyr__video-wrapper) { transform: scale(0.98) }
body.ip--margin :where(img,.lazyframe,.plyr__video-wrapper)  { transform: scale(0.99) }
@media (max-width: 777px) { 
    body.ip--padding :where(img,.lazyframe,.plyr__video-wrapper) { transform: scale(0.97) } 
    body.ip--margin :where(img,.lazyframe,.plyr__video-wrapper)  { transform: scale(0.98) } 
}

{%- if settings.boxedLayout -%}
@media (min-width: {{ settings.boxedLayoutWidth }}px) { #app { max-width: var(--boxedLayoutMaxWidth); margin: 0 auto; border-inline: var(--globalBorder) } }
{%- endif -%}
@media (max-width: 777px) { 
  :root { 
    --fontSize: 1.4rem;
    --iconSize: var(--fontSize);
    --hSize: 1.6rem;
    --h1Size: var(--hSize);
    --h2Size: var(--hSize);
    --h3Size: var(--hSize);
    --h4Size: var(--hSize);
    --h5Size: var(--hSize);
    --h6Size: var(--hSize);
  }
}
</style>